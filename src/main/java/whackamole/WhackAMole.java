/*
 * Name: Rishad Ali
 * Date: January 17, 2017
 * Description: A Whack A Mole game where you whack the moles and gather points!
 */
package whackamole;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import mainMenu.arcadeGUI;

public class WhackAMole extends javax.swing.JFrame {

    public static JButton grid[] = new JButton[16];
    public static boolean gameRunning = true;
    public static boolean buttons[] = new boolean[16];
    public static int molesKO = 0;
    public ImageIcon Front = new ImageIcon(getClass().getResource("/whackamole/MoleHole.jpg"));
    public ImageIcon Back = new ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"));
    public static int score = 0;
    public static boolean locationChecker = false;

    public WhackAMole() {

        initComponents();

        start();
        this.setVisible(true);
    }

    //start game method made by parker so he can access the game from his arcadeGUI.java file
    public static void startGame() {
        final WhackAMole x = new WhackAMole();
        //set the gamerunning boolean to true, this makes sure the game starts again if the user opens it more than once
        gameRunning = true;

        //new event listener to see if the window is closing, this code was added by parker so 1) the game wouldn't run in the background, and 2) so the game would dispose instead of doing a System.exit()
        x.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {

                //make the game stop running when you exit the program, so it doesn't run in the background
                gameRunning = false;
                //dispose the frame
                x.dispose();

            }
        });

        new Thread() {
            @Override
            public void run() {
                while (gameRunning) {
                    try {
                        locationChecker = true;
                        x.randomizer();
                        Thread.sleep(1250 - 05 * ((molesKO)));
                        //Number of miliseconds for one game cycle
                        //Goes down everytime a mole is killed
                    } catch (InterruptedException e) {
                    }
                    //prevents error from appearing
                }

            }
        }.start();
        
        //makes the game open in the middle of the screen
        x.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        B1 = new javax.swing.JButton();
        B2 = new javax.swing.JButton();
        B3 = new javax.swing.JButton();
        B4 = new javax.swing.JButton();
        B5 = new javax.swing.JButton();
        B6 = new javax.swing.JButton();
        B7 = new javax.swing.JButton();
        B8 = new javax.swing.JButton();
        B9 = new javax.swing.JButton();
        B10 = new javax.swing.JButton();
        B11 = new javax.swing.JButton();
        B12 = new javax.swing.JButton();
        B13 = new javax.swing.JButton();
        B14 = new javax.swing.JButton();
        B15 = new javax.swing.JButton();
        B16 = new javax.swing.JButton();
        pointText = new javax.swing.JLabel();
        pointOutput = new javax.swing.JTextField();
        killsText = new javax.swing.JLabel();
        killsOutput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Candara", 1, 48)); // NOI18N
        jLabel1.setText("WHACK A MOLE");

        B1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1ActionPerformed(evt);
            }
        });

        B2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2ActionPerformed(evt);
            }
        });

        B3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B3ActionPerformed(evt);
            }
        });

        B4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });

        B5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B5ActionPerformed(evt);
            }
        });

        B6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B6ActionPerformed(evt);
            }
        });

        B7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B7ActionPerformed(evt);
            }
        });

        B8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B8ActionPerformed(evt);
            }
        });

        B9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B9ActionPerformed(evt);
            }
        });

        B10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B10ActionPerformed(evt);
            }
        });

        B11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B11ActionPerformed(evt);
            }
        });

        B12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B12ActionPerformed(evt);
            }
        });

        B13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B13ActionPerformed(evt);
            }
        });

        B14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B14ActionPerformed(evt);
            }
        });

        B15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B15ActionPerformed(evt);
            }
        });

        B16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/EmptyHole.jpg"))); // NOI18N
        B16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B16ActionPerformed(evt);
            }
        });

        pointText.setText("Points:");

        pointOutput.setEditable(false);

        killsText.setText("Moles KO'd:");

        killsOutput.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(B9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(B10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(B11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(B12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(B6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(B7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(B8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(B3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(B4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(B13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(pointText)
                                .addGap(37, 37, 37)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pointOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(killsText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(killsOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(B14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(B15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(B16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pointOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pointText)
                    .addComponent(killsText)
                    .addComponent(killsOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1ActionPerformed
        if (buttons[0] == true) {
            B1.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[0] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B1ActionPerformed

    private void B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2ActionPerformed
        if (buttons[1] == true) {
            B2.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[1] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B2ActionPerformed

    private void B3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B3ActionPerformed
        if (buttons[2] == true) {
            B3.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[2] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B3ActionPerformed

    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
        if (buttons[3] == true) {
            B4.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[3] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B4ActionPerformed

    private void B5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B5ActionPerformed
        if (buttons[4] == true) {
            B5.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[4] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B5ActionPerformed

    private void B6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B6ActionPerformed
        if (buttons[5] == true) {
            B6.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[5] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B6ActionPerformed

    private void B7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B7ActionPerformed
        if (buttons[6] == true) {
            B7.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[6] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B7ActionPerformed

    private void B8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B8ActionPerformed
        if (buttons[7] == true) {
            B8.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[7] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B8ActionPerformed

    private void B9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B9ActionPerformed
        if (buttons[8] == true) {
            B9.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[8] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B9ActionPerformed

    private void B10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B10ActionPerformed
        if (buttons[9] == true) {
            B10.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[9] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B10ActionPerformed

    private void B11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B11ActionPerformed
        if (buttons[10] == true) {
            B11.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[10] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B11ActionPerformed

    private void B12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B12ActionPerformed
        if (buttons[11] == true) {
            B12.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[11] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B12ActionPerformed

    private void B13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B13ActionPerformed
        if (buttons[12] == true) {
            B13.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[12] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B13ActionPerformed

    private void B14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B14ActionPerformed
        if (buttons[13] == true) {
            B14.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[13] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B14ActionPerformed

    private void B15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B15ActionPerformed
        if (buttons[14] == true) {
            B15.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[14] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B15ActionPerformed

    private void B16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B16ActionPerformed
        if (buttons[15] == true) {
            B16.setIcon(Back);
            score += 100 + (10 * molesKO);
            molesKO++;
            buttons[15] = false;
            pointOutput.setText(Integer.toString(score));
            killsOutput.setText(Integer.toString(molesKO));
        }
    }//GEN-LAST:event_B16ActionPerformed

    public void start() {
        for (int i = 0; i < buttons.length; i++) {
            buttons[i] = false;
        }
        grid[0] = B1;
        grid[1] = B2;
        grid[2] = B3;
        grid[3] = B4;
        grid[4] = B5;
        grid[5] = B6;
        grid[6] = B7;
        grid[7] = B8;
        grid[8] = B9;
        grid[9] = B10;
        grid[10] = B11;
        grid[11] = B12;
        grid[12] = B13;
        grid[13] = B14;
        grid[14] = B15;
        grid[15] = B16;

    }
    //Assinging the buttons to spots in the array 'grid'

    public void endGame() {
        gameRunning = false;
        JOptionPane.showMessageDialog(null, "Game over, you had " + score + " points, and killed " + molesKO + " moles!");

        //if the current score the user has in the game is greater than their current high score, then set the high score to their current score
        try {
            if (arcadeGUI.getScore() < score) {
                arcadeGUI.setScore(score);
            }
        } catch (IOException ex) {
            Logger.getLogger(WhackAMole.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void loseCon() {
        int Count = 0;
        for (int i = 0; i < buttons.length; i++) {
            if (buttons[i] == true) {

                Count++;
            }
        }
        if (Count > 8) {
            endGame();
        }
    }

    public void randomizer() {
        while (locationChecker) {
            Random rand = new Random();
            int location = rand.nextInt(15);
            if (buttons[location] == false) {
                grid[location].setIcon(Front);
                buttons[location] = true;
                locationChecker = false;
            }
        }
        loseCon();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        final WhackAMole x = new WhackAMole();

        new Thread() {
            @Override
            public void run() {
                while (gameRunning) {
                    try {
                        locationChecker = true;
                        x.randomizer();
                        Thread.sleep(1250 - 05 * ((molesKO)));
                        //Number of miliseconds for one game cycle
                        //Goes down everytime a mole is killed
                    } catch (InterruptedException e) {
                    }
                    //prevents error from appearing
                }

            }
        }.start();

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WhackAMole().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B1;
    private javax.swing.JButton B10;
    private javax.swing.JButton B11;
    private javax.swing.JButton B12;
    private javax.swing.JButton B13;
    private javax.swing.JButton B14;
    private javax.swing.JButton B15;
    private javax.swing.JButton B16;
    private javax.swing.JButton B2;
    private javax.swing.JButton B3;
    private javax.swing.JButton B4;
    private javax.swing.JButton B5;
    private javax.swing.JButton B6;
    private javax.swing.JButton B7;
    private javax.swing.JButton B8;
    private javax.swing.JButton B9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField killsOutput;
    private javax.swing.JLabel killsText;
    private javax.swing.JTextField pointOutput;
    private javax.swing.JLabel pointText;
    // End of variables declaration//GEN-END:variables

}
